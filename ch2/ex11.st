| name hours payRate federalTaxRate stateTaxRate output grossPay federalTax stateTax   totalDeductions netPay |name := UIManager default request: 'Enter employee''s name:'.hours := Number readFrom: (UIManager default request: 'Enter number of hours worked:').payRate := Number readFrom: (UIManager default request: 'Enter hourly pay rate:').federalTaxRate := Number readFrom: (UIManager default request: 'Enter federal tax withholding rate:').stateTaxRate := Number readFrom: (UIManager default request: 'Enter state tax withholding rate:').output := WriteStream on: String new.output << 'Employee name: ' << name; cr.output << 'Hours worked: ' << hours asString; cr.output << 'Pay rate: ' << (payRate round: 2) asString; cr.grossPay := hours * payRate.output << 'Gross pay: $'.output << (grossPay round: 2) asString; cr.output << 'Deductions:'; cr.federalTax := grossPay * federalTaxRate.output << '  Federal withholding (' << (federalTaxRate * 100) asString.output << '%): $' << (federalTax round: 2) asString; cr.stateTax := grossPay * stateTaxRate.output << '  State withholding (' << (stateTaxRate * 100) asString.output << '%): $' << (stateTax round: 2) asString; cr.totalDeductions := federalTax + stateTax.output << '  Total deduction: $' << (totalDeductions round: 2) asString; cr.netPay := grossPay - totalDeductions.output << 'Net pay: $' << (netPay round: 2) asString.UIManager default alert: output contents.